import { type Context, Markup } from 'telegraf'
import { Command } from '../Command'
import { escape } from '../../helpers'
import {
  services,
  dataServices,
  regexUrl,
  matchServices, type IKeyMatchSevice
} from './constants'
import { type Bot } from '../../app'

export class Files extends Command {
  constructor (bot: Bot) {
    super(bot)
  }

  // –ö–Ω–æ–ø–∫–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
  servicesButtons () {
    return [
      [
        Markup.button.callback('UI8NET', services.ui8net),
        Markup.button.callback('CRAFTWORK', services.craftwork)
      ],
      [
        Markup.button.callback('LS. GRAPHICS', services.ls_graphics),
        Markup.button.callback('UIHUNT', services.uihunt)
      ],
      [
        Markup.button.callback('PIXSELLZ', services.pixsellz),
        Markup.button.callback('SPLINE.ONE', services.spline)
      ]
    ]
  }

  //  –í—ã–±–æ—Ä —Å–µ—Ä–≤–∏—Å–∞
  async selectServices (ctx: Context): Promise<void> {
    await ctx.replyWithPhoto(
      'https://i.ibb.co/bJkm6w4/4.png',
      {
        caption: '*‚ö°Ô∏è –¢—ã —Å–º–æ–∂–µ—à—å –∑–∞–ø—Ä–æ—Å—Ç–æ —Å–∫–∞—á–∞—Ç—å –ø–ª–∞—Ç–Ω—ã–π —Ñ–∞–π–ª \\- –±–µ—Å–ø–ª–∞—Ç–Ω–æ*' + '\n \n' +
          '*–û–±—â–∞—è —Å—É–º–º–∞ —Ñ–∞–π–ª–æ–≤ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –±–æ–ª–µ–µ 150\\.000$*' + '\n \n' +
          '1\\) –í—ã–±–µ—Ä–∏ —Å–µ—Ä–≤–∏—Å –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º —Ñ–∞–π–ª' + '\n \n' +
          '2\\) –ü–µ—Ä–µ–π–¥–∏ –Ω–∞ —Å–∞–π—Ç —Å–µ—Ä–≤–∏—Å–∞ –∏ –Ω–∞–π–¥–∏ –Ω—É–∂–Ω—ã–π —Ñ–∞–π–ª' + '\n \n' +
          '3\\) –°–∫–æ–ø–∏—Ä—É–π —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª –∏ –≤—Å—Ç–∞–≤—å –≤ –±–æ—Ç–∞' + '\n \n' +
          '4\\) –ì–æ—Ç–æ–≤–æ\\! –±–æ—Ç –≤—ã—à–ª–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ',
        parse_mode: 'MarkdownV2',
        reply_markup: {
          inline_keyboard: this.servicesButtons()
        }
      }
    )
  }

  handle (): void {
    // –ó–∞–ø—Ä–æ—Å–∏—Ç—å —Ñ–∞–π–ª—ã
    this.bot.bot.hears('üì• –ó–∞–ø—Ä–æ—Å–∏—Ç—å —Ñ–∞–π–ª', async (ctx) => {
      this.bot.logger.logAction('–ó–∞–ø—Ä–æ—Å–∏—Ç—å —Ñ–∞–π–ª', ctx.from)

      try {
        await ctx.deleteMessage()
        await this.selectServices(ctx)
      } catch (e) {
        this.bot.logger.log(`error in get files: ${e}`, 'error')
      }
    })

    // –ö–Ω–æ–ø–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
    this.bot.bot.action([
      services.ui8net,
      services.craftwork,
      services.ls_graphics,
      services.uihunt,
      services.pixsellz,
      services.spline
    ], async (ctx) => {
      const serviceName = ctx.match[0]
      this.bot.logger.logAction(serviceName, ctx.from)

      const info = dataServices[serviceName]

      if (info === undefined) {
        this.bot.logger.log('Info not search', 'error')
      }

      try {
        await ctx.editMessageMedia({
          media: info.image,
          type: 'photo',
          caption: `*–¢—ã –≤—ã–±—Ä–∞–ª —Å–µ—Ä–≤–∏—Å ${info.title}*` + '\n \n' +
            `[–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç](${info.url}) –∏ —Å–∫–æ–ø–∏—Ä—É–π —Å—Å—ã–ª–∫—É —Ñ–∞–π–ª–∞` + '\n \n' +
            'üìÑ –î–∞–ª–µ–µ –≤—Å—Ç–∞–≤—å —Å—Å—ã–ª–∫—É –≤ —á–∞—Ç –±–æ—Ç–∞ –∏ –ø–æ—à–ª–∏ –µ–µ',
          parse_mode: 'MarkdownV2'
        })

        await ctx.editMessageReplyMarkup({
          inline_keyboard: [
            [Markup.button.callback('‚¨ÖÔ∏è –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —Å–µ—Ä–≤–∏—Å', 'select_services')]
          ]
        })
      } catch (e) {
        this.bot.logger.log(`error in ${serviceName}, ${e}`, 'error')
      }
    })

    // –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ (–≤—ã–±–æ—Ä —Å–µ—Ä–≤–∏—Å–æ–≤)
    this.bot.bot.action('select_services', async (ctx) => {
      try {
        await ctx.editMessageMedia({
          media: 'https://i.ibb.co/bJkm6w4/4.png',
          type: 'photo',
          caption: '*‚ö°Ô∏è –¢—ã —Å–º–æ–∂–µ—à—å –∑–∞–ø—Ä–æ—Å—Ç–æ —Å–∫–∞—á–∞—Ç—å –ø–ª–∞—Ç–Ω—ã–π —Ñ–∞–π–ª \\- –±–µ—Å–ø–ª–∞—Ç–Ω–æ*' + '\n \n' +
            '*–û–±—â–∞—è —Å—É–º–º–∞ —Ñ–∞–π–ª–æ–≤ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –±–æ–ª–µ–µ 150\\.000$*' + '\n \n' +
            '1\\) –í—ã–±–µ—Ä–∏ —Å–µ—Ä–≤–∏—Å –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º —Ñ–∞–π–ª' + '\n \n' +
            '2\\) –ü–µ—Ä–µ–π–¥–∏ –Ω–∞ —Å–∞–π—Ç —Å–µ—Ä–≤–∏—Å–∞ –∏ –Ω–∞–π–¥–∏ –Ω—É–∂–Ω—ã–π —Ñ–∞–π–ª' + '\n \n' +
            '3\\) –°–∫–æ–ø–∏—Ä—É–π —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª –∏ –≤—Å—Ç–∞–≤—å –≤ –±–æ—Ç–∞' + '\n \n' +
            '4\\) –ì–æ—Ç–æ–≤–æ\\! –±–æ—Ç –≤—ã—à–ª–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ',
          parse_mode: 'MarkdownV2'
        })

        await ctx.editMessageReplyMarkup({
          inline_keyboard: this.servicesButtons()
        })
      } catch (e) {
        this.bot.logger.log('error in select services', 'error')
      }
    })

    // –û—Ç–≤–µ—Ç –Ω–∞ —Å—Å—ã–ª–∫—É
    this.bot.bot.hears(regexUrl, async (ctx) => {
      const userId = String(ctx.update.message.from.id)

      const match = (ctx.match[0] as IKeyMatchSevice)
      const serviceName = matchServices[match]
      const { image } = dataServices[serviceName]

      try {
        const responsePaid = await this.bot.api?.checkPaid(userId)

        if (!responsePaid?.isPaid) {
          await ctx.replyWithPhoto(
            image,
            {
              caption: '*‚åõÔ∏è–£ –≤–∞—Å –Ω–µ –æ–ø–ª–∞—á–µ–Ω –¥–æ—Å—Ç—É–ø*' + '\n \n' +
              '–ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏—è–º–∏ –±–æ—Ç–∞, –ø–µ—Ä–µ–π–¥–∏ –≤ —Ä–∞–∑–¥–µ–ª –æ–ø–ª–∞—Ç—ã –±–æ—Ç–∞ –∏ –æ–ø–ª–∞—Ç–∏ —Ç–∞—Ä–∏—Ñ',
              parse_mode: 'MarkdownV2'
            }
          )
          return
        }
      } catch (e) {
        this.bot.logger.log(`error checkPaid in get url: ${e}`, 'error')
        return
      }

      try {
        const responseFile = await this.bot.api?.getFile(userId, ctx.update.message.text)

        const { title, price, downloadUrl } = responseFile ?? {}

        await ctx.replyWithPhoto(
          'https://i.ibb.co/MNspL88/12.png',
          {
            caption: '*–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª*' + '\n \n' +
              `*${escape(title)}*` + '\n' +
              `–°—Ç–æ–∏–º–æ—Å—Ç—å —Ñ–∞–π–ª–∞ –Ω–∞ —Å–∞–π—Ç–µ: ${escape(price)}` + '\n \n' +
              `üì• –°–∫–∞—á–∞—Ç—å: [–í—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É](${escape(downloadUrl)})` + '\n \n' +
              '‚ÜòÔ∏è –í—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å –µ—â–µ —Ñ–∞–π–ª, –≤—Å—Ç–∞–≤–∏–≤ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É',
            parse_mode: 'MarkdownV2'
          }
        )
      } catch (e) {
        this.bot.logger.log(`error in get url: ${e}`, 'error')

        await ctx.replyWithPhoto(
          'https://i.ibb.co/C2GvWmt/13.png',
          {
            caption: '*üìÇ –ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω*' + '\n \n' +
        '–ú—ã –≤–∑—è–ª–∏ –≤ —Ä–∞–±–æ—Ç—É –¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª, –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–¥–∞—Å—Ç –µ–≥–æ –∫–∞–∫ —Ç–æ–ª—å–∫–æ –º—ã –¥–æ–±–∞–≤–∏–º –µ–≥–æ –≤ –Ω–∞—à—É –±–∞–∑—É –∏–ª–∏ —Ä–µ—à–∏–º –ø—Ä–æ–±–ª–µ–º—É —Å –Ω–∏–º' + '\n \n' +
        '\\(–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å\\)' + '\n \n' +
        '‚ÜòÔ∏è –í—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª, –≤—Å—Ç–∞–≤–∏–≤ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É',
            parse_mode: 'MarkdownV2'
          }
        )
      }
    })
  }
}
